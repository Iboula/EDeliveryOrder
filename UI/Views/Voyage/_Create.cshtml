@model Infrastructure.Voyage

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("CreateVoyage", "Voyage", FormMethod.Post, htmlAttributes: new { @id = "addVoyageForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.VoyageNumber, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VoyageNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VoyageNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.VesselName, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VesselName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VesselName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PortOfFinalPlaceOfDevlivery, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.DropDownList("PortOfFinalPlaceOfDevlivery", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PortOfFinalPlaceOfDevlivery, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PortOfRecept, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.DropDownList("PortOfRecept", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PortOfRecept, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PortOfLoading, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.DropDownList("PortOfLoading", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PortOfLoading, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PortOfDischarge, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.DropDownList("PortOfDischarge", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PortOfDischarge, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ETD, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ETD, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ETD, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ETA, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ETA, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ETA, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-11">
                @*<input type="submit" value="Save" class="btn btn-success btn-block float-right" />*@
                <button type="button" class="btn btn-success btn-block float-right" onclick="saveVoyageSubmit()">Save</button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/scripts")
}
